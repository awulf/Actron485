Master -> Zone
M: 83 F1 54 2C B1 34 26 	1000 0011  1111 0001  0101 0100  0010 1100  1011 0001  0011 0100  0010 0110  

/- Bit number
|    /- Example nibble
|    | /- Example bit
00:  8 1 - Start
01:    0 "
02:    0 "
03:    0 "
04:  3 0 - Zone Number (e.g. 3)
05:    0 "
06:    1 "
07:    1 "

08:  F 1 - Zone Temperature. Combined with bit 23. 0->50°C
09:    1   [23][08 - 15]
10:    1   E.g. 0b0,1111,0001 => 241 / 10 => 24.1°C
11:    1 "
12:  1 0 "
13:    0 "
14:    0 "
15:    1 "
    
16:  5 0 - Compressor Mode: 0 no, 1 yes
17:    1 - Zone On: 0 no, 1 yes
18:    0 - ?
19:    1 - Damper State 0 -> 5, 3bit. 0 Closed, 5 fully open
20:  4 0   E.g 0b101 => 5
21:    1 "
22:    0 - Modulating? This bit turns 1 sometimes when zone is turning off or when all zones temporarily turn on for balancing
23:    0 - Leading bit for zone temperature at bit 08
    
24:  2 0 - Zone Heating (otherwise cooling if compressor is active)
25:    0 - ?
26:    1 - Min Set Point Temp 6bits in Temp=Number/2. In 0.5° increments. 16->30°C
27:    0   E.g. 0b101100 => 0x2C => 44 / 2 = 22.0°C
28:  C 1 "
29:    1 "
30:    0 "
31:    0 "
    
32:  B 1 - Fan Only Mode: 0 no, 1 yes
33:    0 - ?
34:    1 - Set Point Temp 6bits in Temp=Number/2. In 0.5° increments. 16->30°C
35:    1   E.g. 0b110001 => 0x31 => 49 / 2 = 24.5°C
36:  1 0 "
37:    0 "
38:    0 "
39:    1 "

40:  3 0 - Zone Compressor Active: 0 no, 1 yes 
41:    0 - ?
42:    1 - Max Set Point Temp 6bits in Temp=Number/2. In 0.5° increments. 16->30°C
43:    1   E.g. 0b110100 => 0x34 => 52 / 2 = 26.0°C
44:  4 0 "
45:    1 "
46:    0 "
47:    0 "
    
48:  2 0 - Verification:
49:    0   = ~(byte[0] + byte[1] + byte[2] + byte[3] + byte[4] + byte[5]);
50:    1 "
51:    0 "
52:  6 0 "
53:    1 "
54:    1 "
55:    0 "
     
     
=================================

Zone -> Master
Z: C3 31 82 04 85 			1100 0011  0011 0001  1000 0010  0000 0100  1000 0101  

/- Bit number
|    /- Example nibble
|    | /- Example bit
00:  C 1 - Start
01:    1 "
02:    0 "
03:    0 "
04:  3 0 - Zone Number (e.g. 3)
05:    0 "
06:    1 "
07:    1 "

08:  3 0 - Set Point Temp 1 Byte in Temp=Number/2. In 0.5° increments. 16->30
09:    0   E.g. 0x31 => 49 / 2 = 24.5°C
10:    1 " 
11:    1 "
12:  1 0 "
13:    0 "
14:    0 "
15:    1 "
    
16:  8 1 - Zone On: 1 yes, 0 no
17:    0 - Damper Open Mode: 1 fully open, 0 auto (e.g. double press zone on button to activate)
18:    0 - Send Config (e.g. temp offset). 1 when sending 0 otherwise, probably important on bootup. Last two bytes used
19:    0 - Requesting Zone: set to 1 on power up for configuring the wall controller, this message comes from master when it can't see responses from zone wall controller
20:  2 0 - ?
21:    0 - ?
22:    1 - 2 leading bits making a 10bit signed int, continued in bits 24-31
23:    0 "
    
24:  0 0 - Config Mode: Signed Int Byte, Temperature calibration offset x10, 
25:    0                E.g. -32 * 0.1 -> -3.2. Min -3.2 Max 3.0°C
26:    0   Normal Mode: First add 512 if negative, subtract 512 if positive.
27:    0                Signed Int 10bit. Temperature offset from 25°C
28:  4 0                Linear between 16.9°C -> 30.8°C => temp = (250 - value) * 0.1
29:    1                Approx. when greater than 30.8°C => temp = 0.00007124*value^2 - 0.1052*value+24.5
30:    0                Approx. when less than 16.9 => temp = -0.00001457*value^2 - 0.0988*value+24.923
31:    0 "
    
32:  8 1 - Verification:
33:    0   = ~(byte[0] + byte[1] + byte[2] + byte[3]) 
34:    0 " 
35:    0 "
36:  5 0 "
37:    1 "
38:    0 "
39:    1 "
     
  
 
- Fan speed settings change no bits
- Zone Fully Open Mode, no message from master to zone
- An Open Zone wont cause compressor/fan to turn, but will keep on if other zones are turned off


Baud rate 4800
Master will also call C`z` (C3) when looking for a missing controller. A reply will activate it calling 8`z` (83) again.
Unknown how a wall controller knows which zone it is

Temperatures 2 Bytes = Temperature x0.1 e.g. 0x0100 = 256*0.1 => 25.6
Temperatures 1 Byte = Temperature / 2 e.g. 0x2a = 42/2 => 21

Verification byte at end of the packets are bitwise not of the sum of the previous bytes